on:
  push:
    branches:
      - master
  pull_request:
name: Test
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres:13-alpine
        ports:
          - 5432
        env:
          POSTGRES_USER: username
          POSTGRES_PASS: pass
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: relay
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      relay:
        image: ghcr.io/rust-playground/relay-rs:0.9.0
        ports:
          - 8080:8080
        env:
          RUST_LOG=debug
          DATABASE_URL="postgres://username:pass@postgres:5432/relay?sslmode=disable"
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-v1-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-v1-go-

      - name: Test
        run: go test -race -cover ./...

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.45.2
